#!/usr/bin/env python
"""
screencollisions

Uses the specified CSV file and provides a web app for a screener to
evaluate images.  First run with the "init" command to create the empty
database, then

Usage:
    screencollisions init <record-csv> [<sqlite-file>]
    screencollisions run <sqlite-file>
    screencollisions (-h | --help)
"""
from __future__ import print_function, absolute_import

# standard library
import sys
import sqlite3

# third party
import pandas as pd
import flask
import docopt

# project specific
import pathcustomize

def write_screen_result(conn, xid, screener, result):
    cmd = '''INSERT OR REPLACE INTO screen(xid, screener, result)
                VALUES (COALESCE((SELECT xid FROM screen WHERE xid == :xid AND screener == :screener), :xid),
                        COALESCE((SELECT screener FROM screen WHERE xid == :xid AND screener == :screener), :screener),
                        :result)'''
    c = conn.cursor()
    c.execute(cmd, {'xid': xid, 'result': result, 'screener': screener})

def init(record_csv, sqlite_file=None):
    df = pd.read_csv(record_csv)

    # extended ID
    df['xid'] = df.apply(lambda r: '{}_{:05}'.format(r['eid'], r['bid']), axis=1)
    df.set_index('xid', inplace=True)

    if sqlite_file is None:
        sqlite_file = 'screen.db'
    conn = sqlite3.connect(sqlite_file)

    df.to_sql('collisions', conn, index=True, index_label='xid')

    c = conn.cursor()
    c.execute('''CREATE TABLE screen (
                    xid text NOT NULL,
                    screener text NOT NULL,
                    result text,
                    PRIMARY KEY (xid, screener) ON CONFLICT REPLACE
                    )''')

def run(sqlite_file):
    conn = sqlite3.connect(sqlite_file)
    c = conn.cursor()

    write_screen_result(conn, xid='1', screener='me', result='1')
    write_screen_result(conn, xid='2', screener='me', result='1')
    write_screen_result(conn, xid='3', screener='me', result='1')
    write_screen_result(conn, xid='4', screener='me', result='2')
    write_screen_result(conn, xid='3', screener='me', result='42')

    print(pd.read_sql('SELECT * FROM screen', conn))

    #images = dict(c.execute('SELECT xid, filename FROM collisions'))
    #print(images)

def main():
    args = docopt.docopt(__doc__)

    if args['init']:
        init(args['<record-csv>'], args['<sqlite-file>'])
    elif args['run']:
        run(args['<sqlite-file>'])
    else:
        print('Unexpected usage, check --help')

if __name__ == '__main__':
    sys.exit(main())
